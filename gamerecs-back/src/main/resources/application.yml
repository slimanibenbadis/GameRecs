spring:
  application:
    name: gamerecs-back
  profiles:
    active: ${SPRING_PROFILES_ACTIVE}
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
    show-sql: false
    open-in-view: false
    properties:
      hibernate:
        format_sql: false
        # Memory optimizations
        jdbc.batch_size: 25
        order_inserts: true
        order_updates: true
        generate_statistics: false
        # Disable aggressive lazy loading
        enable_lazy_load_no_trans: false
        # Cache settings
        cache:
          use_second_level_cache: false
          use_query_cache: false
        # Connection release mode
        connection.release_mode: after_transaction
        # Batch fetching
        default_batch_fetch_size: 25
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    clean-disabled: true
    validate-on-migrate: true
  mail:
    host: ${SMTP_HOST:smtp.gmail.com}
    port: ${SMTP_PORT:465}
    username: ${SMTP_USERNAME}
    password: ${SMTP_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          socketFactory:
            port: ${SMTP_PORT:465}
            class: javax.net.ssl.SSLSocketFactory
            fallback: false
          ssl:
            enable: true
            trust: ${SMTP_HOST:smtp.gmail.com}
          starttls:
            enable: false
            required: false
          from: ${SMTP_USERNAME:noreply@gamer-reco.com}

# Server Configuration
server:
  port: ${PORT:8080}
  tomcat:
    max-threads: 8
    min-spare-threads: 1
    max-connections: 20
    accept-count: 10
    connection-timeout: 2000
    max-swallow-size: 512KB
    max-http-form-post-size: 512KB
    # Additional memory optimizations
    max-http-header-size: 8KB
    processor-cache: 50
    background-processor-delay: 30

# CORS Configuration
allowed:
  origins: ${ALLOWED_ORIGINS:http://localhost:4200}

# SpringDoc OpenAPI Configuration
springdoc:
  api-docs:
    enabled: false
  swagger-ui:
    enabled: false

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: never
      group:
        readiness:
          include: db,diskSpace,ping
        liveness:
          include: ping
    metrics:
      enabled: true
  metrics:
    enable:
      jvm: true
      process: true
      system: true
      hikaricp: true
      tomcat: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      sla:
        http.server.requests: 100ms, 500ms
  health:
    mail:
      enabled: ${MANAGEMENT_HEALTH_MAIL_ENABLED:true}
    livenessState:
      enabled: true
    readinessState:
      enabled: true

# Application specific configuration
app:
  verification:
    base-url: ${VERIFICATION_BASE_URL:http://localhost:4200}
    token:
      expiration-hours: 24
  jwt:
    secret: ${JWT_SECRET:404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970}
    expiration-ms: ${JWT_EXPIRATION_MS:86400000}
